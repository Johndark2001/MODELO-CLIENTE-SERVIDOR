
''' MODELO SERVIDOR'''


import socket

def iniciar_servidor():
    servidor_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    servidor_socket.bind(('localhost', 12345))
    
    servidor_socket.listen(5)
    print("Servidor escuchando en el puerto 12345...")
    
    while True:
        cliente_socket, direccion_cliente = servidor_socket.accept()
        print(f"Conexión establecida con {direccion_cliente}")
        
        cliente_socket.send("¿Cuál es tu nombre?".encode('utf-8'))
        nombre = cliente_socket.recv(1024).decode('utf-8')
        print(f"Nombre recibido: {nombre}")
        
        cliente_socket.send("¿Cuál es tu edad?".encode('utf-8'))
        edad = cliente_socket.recv(1024).decode('utf-8')
        print(f"Edad recibida: {edad}")
        
        cliente_socket.send("¿Cuál es tu correo electrónico?".encode('utf-8'))
        correo = cliente_socket.recv(1024).decode('utf-8')
        print(f"Correo recibido: {correo}")
        
        confirmacion = f"Gracias {nombre}, de {edad} años. Tu correo {correo} ha sido registrado."
        cliente_socket.send(confirmacion.encode('utf-8'))
        
        cliente_socket.close()

iniciar_servidor()





'''MODELO CLIENTE'''


import socket

def iniciar_cliente():

    cliente_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    cliente_socket.connect(('localhost', 12345))
    
    pregunta = cliente_socket.recv(1024).decode('utf-8')
    print(f"Servidor: {pregunta}")
    nombre = input("Tu nombre: ")
    cliente_socket.send(nombre.encode('utf-8'))
    
    pregunta = cliente_socket.recv(1024).decode('utf-8')
    print(f"Servidor: {pregunta}")
    edad = input("Tu edad: ")
    cliente_socket.send(edad.encode('utf-8'))
    
    pregunta = cliente_socket.recv(1024).decode('utf-8')
    print(f"Servidor: {pregunta}")
    correo = input("Tu correo electrónico: ")
    cliente_socket.send(correo.encode('utf-8'))
    

    confirmacion = cliente_socket.recv(1024).decode('utf-8')
    print(f"Servidor: {confirmacion}")
    

    cliente_socket.close()


iniciar_cliente()











